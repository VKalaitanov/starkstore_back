events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;

    # Динамическая установка допустимого источника
    map $http_origin $allowed_origin {
        default "";
        "http://localhost:3001" $http_origin;
        "http://31.129.102.58:3001" $http_origin;
    }

    # Настройка backend-сервера Django
    upstream service_django {
        server service_django:8000;
    }

    # Настройка frontend-сервера React
    upstream front {
        server 31.129.102.58:3000;
    }

    server {
        listen 80;
        server_name 31.129.102.58;
        server_tokens off;

        # Настройка для React-приложения
        location / {
            proxy_pass http://front;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS-заголовки для фронтенда
            add_header 'Access-Control-Allow-Origin' $allowed_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
            add_header 'Access-Control-Expose-Headers' 'Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Настройка ответа на OPTIONS-запросы
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $allowed_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Настройка для Django API
        location /api {
            proxy_pass http://service_django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            # CORS-заголовки для API
            add_header 'Access-Control-Allow-Origin' $allowed_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Настройка ответа на OPTIONS-запросы
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $allowed_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Настройка для медиа-файлов
        location /media/ {
            alias /app/media/;
            expires 15d;
        }

        # Настройка для статических файлов
        location /static/ {
            alias /app/static/;
            expires 7d;
            add_header Content-Type text/css;
        }
    }
}
